{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useState","currentText","setCurrentText","text","setText","className","style","display","flexDirection","alignItems","value","onChange","e","target","lang","onClick","height","width","fontSize","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"4MAIe,G,MAAA,WAAO,IAAD,EACqBA,mBAAS,IAD9B,mBACVC,EADU,KACGC,EADH,OAEOF,mBAAS,IAFhB,mBAEVG,EAFU,KAEJC,EAFI,KASjB,OACI,sBAAKC,UAAU,YAAYC,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAA1F,UACI,uBACA,gEACA,cAAC,IAAD,CACIC,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,EAAeU,EAAEC,OAAOH,QACzCI,KAAK,OAET,uBACA,wBAAQC,QAfD,WACXX,EAAQD,EAAOF,GACfC,EAAe,KAaX,sBACA,uBACA,0BACII,MAAO,CAAEU,OAAQ,SAAUC,MAAO,SAAUC,SAAU,QACtDR,MAAOP,EACPQ,SAAU,SAAAC,GACNO,QAAQC,IAAIR,EAAEC,OAAOH,OACrBN,EAAQQ,EAAEC,OAAOH,eClBtBW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.32d94d54.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { ReactTransliterate } from \"react-transliterate\"\nimport \"react-transliterate/dist/index.css\"\n\nexport default () => {\n    const [currentText, setCurrentText] = useState(\"\")\n    const [text, setText] = useState(\"\")\n\n    const handle = () => {\n        setText(text + currentText)\n        setCurrentText('')\n    }\n\n    return (\n        <div className=\"container\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            <br></br>\n            <h3>English to Hindi Transliterate</h3>\n            <ReactTransliterate\n                value={currentText}\n                onChange={(e) => setCurrentText(e.target.value)}\n                lang=\"hi\"\n            />\n            <br></br>\n            <button onClick={handle}>Transfer</button>\n            <br></br>\n            <textarea\n                style={{ height: '2000px', width: '1000px', fontSize: '20px' }}\n                value={text}\n                onChange={e => {\n                    console.log(e.target.value)\n                    setText(e.target.value)\n                }}\n            />\n        </div>\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}